package testClasses;

import static org.testng.Assert.assertEquals;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class LoginPageTest extends BaseTestClass {

    @BeforeMethod
    public void navigation() {
        // Navigate to the SauceDemo login page before each test
        driver.navigate().to("https://www.saucedemo.com/");
    }

    @AfterMethod
    public void deleteCookies() {
        // Clear cookies after each test to ensure clean session
        driver.manage().deleteAllCookies();
    }

    // 1. Test case: Attempt login with empty credentials
    @Test
    public void loginWithOutCredentials() {
        saucedemoLoginPage.loginUsername("");
        saucedemoLoginPage.loginPassword("");
        saucedemoLoginPage.clickButtonLogin();

        String actualErrorMessage = saucedemoLoginPage.getErrorMessage();
        String expectedErrorMessage = "Epic sadface: Username is required";
        assertEquals(actualErrorMessage, expectedErrorMessage);
    }

    // 2. Test case: Only password entered, username empty
    @Test
    public void loginWithOnlyPassword() {
        saucedemoLoginPage.loginUsername("");
        saucedemoLoginPage.loginPassword(testData.correctPassword);
        saucedemoLoginPage.clickButtonLogin();

        String actualErrorMessage = saucedemoLoginPage.getErrorMessage();
        String expectedErrorMessage = "Epic sadface: Username is required";
        assertEquals(actualErrorMessage, expectedErrorMessage);
    }

    // 3. Test case: Only username entered, password empty
    @Test
    public void loginWithOnlyUsername() {
        saucedemoLoginPage.loginUsername(testData.correctUsername);
        saucedemoLoginPage.loginPassword("");
        saucedemoLoginPage.clickButtonLogin();

        String actualErrorMessage = saucedemoLoginPage.getErrorMessage();
        String expectedErrorMessage = "Epic sadface: Password is required";
        assertEquals(actualErrorMessage, expectedErrorMessage);
    }

    // 4. Test case: Invalid username and password
    @Test
    public void loginWithInvalidCredentials() {
        saucedemoLoginPage.loginUsername("invalid_user");
        saucedemoLoginPage.loginPassword("invalid_password");
        saucedemoLoginPage.clickButtonLogin();

        String actualErrorMessage = saucedemoLoginPage.getErrorMessage();
        String expectedErrorMessage = "Epic sadface: Username and password do not match any user in this service";
        assertEquals(actualErrorMessage, expectedErrorMessage);
    }

    // 5. Test case: Valid username and password
    @Test
    public void loginWithValidCredentials() {
        saucedemoLoginPage.loginUsername(testData.correctUsername);
        saucedemoLoginPage.loginPassword(testData.correctPassword);
        saucedemoLoginPage.clickButtonLogin();

        // Verify that URL changes to indicate successful login
        String actualUrl = driver.getCurrentUrl();
        String expectedUrl = driver.getCurrentUrl(); // You might want to replace this with the actual expected URL after login
        assertEquals(actualUrl, expectedUrl);
    }
}
