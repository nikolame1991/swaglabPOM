package pageClasses;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class LoginPage {
	WebDriver driver;
	WebDriverWait wait;

	// Element
	@FindBy(id = "user-name")
	WebElement usernameField;

	@FindBy(id = "password")
	WebElement passwordField;

	@FindBy(id = "login-button")
	WebElement loginButton;

	@FindBy(css = ".error-button")
	WebElement buttonError;

	@FindBy(css = ".error-message-container.error")
	WebElement errorMessage;

	// konstruktor
	public LoginPage(WebDriver driver) {
		this.driver = driver;
		wait = new WebDriverWait(driver, Duration.ofSeconds(10));
		PageFactory.initElements(driver, this);
	}

	// Metod za prijavu koja koristi wait direknto
	public void loginUsername(String username) {
		wait.until(ExpectedConditions.visibilityOf(usernameField));
		usernameField.sendKeys(username);
	}

	public void loginPassword(String password) {
		wait.until(ExpectedConditions.visibilityOf(passwordField));
		passwordField.sendKeys(password);
	}

	public void clickButtonLogin() {
		wait.until(ExpectedConditions.elementToBeClickable(loginButton));
		loginButton.click();
	}

	public String getErrorMessage() {
		wait.until(ExpectedConditions.visibilityOf(errorMessage));
		return errorMessage.getText();
	}

	public void clickErrorButton() {
		wait.until(ExpectedConditions.elementToBeClickable(buttonError));
		buttonError.click();
	}

}
