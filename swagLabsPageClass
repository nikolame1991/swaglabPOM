package pageClasses;

import java.time.Duration;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class swagLabsPage {
    WebDriver driver;
    WebDriverWait wait;

    // Web Elements

    // Click the first product link (title)
    @FindBy(css = ".inventory_container .inventory_item:nth-child(1) #item_4_title_link")
    WebElement chooseFirstArticle;

    // Click "Add to cart" button for first item
    @FindBy(css = ".btn.btn_primary.btn_small.btn_inventory")
    WebElement clickButtonAdd;

    // Click the shopping cart link/icon
    @FindBy(css = "#shopping_cart_container a")
    WebElement clickShoppingCart;

    // Click the "Remove" button for the backpack item
    @FindBy(css = "#remove-sauce-labs-backpack")
    WebElement clickButtonRemove;

    // Click the "Continue Shopping" button
    @FindBy(css = "#continue-shopping")
    WebElement clickButtonContinue;

    // ------------------------------------

    // Click "Add to cart" button for the second product
    @FindBy(css = "#inventory_container .inventory_item:nth-child(2) #add-to-cart-sauce-labs-bike-light")
    WebElement clickSecondButtonAdd;

    // Click the shopping cart link/icon (alternative)
    @FindBy(css = ".primary_header #shopping_cart_container > a")
    WebElement clickShoppCart;

    // Click the "Checkout" button on the cart page
    @FindBy(css = ".cart_footer #checkout")
    WebElement clickButtonCheckout;

    // Input field for "First Name"
    @FindBy(css = ".form_group #first-name")
    WebElement inputFirstName;

    // Input field for "Last Name"
    @FindBy(css = ".form_group #last-name")
    WebElement inputLastName;

    // Input field for "Zip Code"
    @FindBy(css = ".form_group #postal-code")
    WebElement inputZipCod;

    // Click the "Continue" button on the checkout form
    @FindBy(css = ".checkout_buttons .submit-button.btn.btn_primary.cart_button.btn_action")
    WebElement continueClickButton;

    // Click the "Finish" button to complete the order
    @FindBy(css = ".cart_footer #finish")
    WebElement clickFinish;

    // Verify the "Thank you for your order!" message
    @FindBy(css = "#checkout_complete_container > h2")
    WebElement thankYouMessage;

    // Verify additional confirmation message below the thank you message
    @FindBy(css = ".complete-text")
    WebElement completeTextMessage;

    // Click the "Back Home" button to return to product page
    @FindBy(css = "#back-to-products")
    WebElement clickButtonBackHome;

    // Constructor to initialize driver, waits and page elements
    public swagLabsPage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    }

    // Methods for user actions

    // Click the first product link
    public void clickFirstArticle() {
        wait.until(ExpectedConditions.elementToBeClickable(chooseFirstArticle)).click();
    }

    // Click the "Add to cart" button for first product
    public void clickAddButton() {
        wait.until(ExpectedConditions.elementToBeClickable(clickButtonAdd)).click();
    }

    // Click the shopping cart icon/link
    public void shoppingCartClick() {
        wait.until(ExpectedConditions.elementToBeClickable(clickShoppingCart)).click();
    }

    // Click the "Remove" button on cart page
    public void removeButtonClick() {
        wait.until(ExpectedConditions.elementToBeClickable(clickButtonRemove)).click();
    }

    // Click the "Continue Shopping" button
    public void buttonContinueClick() {
        wait.until(ExpectedConditions.elementToBeClickable(clickButtonContinue)).click();
    }

    // -------------------------------------------

    // Click the "Add to cart" button for second product
    public void addButtonClick() {
        wait.until(ExpectedConditions.elementToBeClickable(clickSecondButtonAdd)).click();
    }

    // Click the shopping cart icon/link (alternative)
    public void clickShoppCart() {
        wait.until(ExpectedConditions.elementToBeClickable(clickShoppCart)).click();
    }

    // Click the "Checkout" button
    public void buttonClickCheckout() {
        wait.until(ExpectedConditions.elementToBeClickable(clickButtonCheckout)).click();
    }

    // Enter first name in the checkout form
    public void inputFirstName(String firstName) {
        wait.until(ExpectedConditions.visibilityOf(inputFirstName));
        inputFirstName.sendKeys(firstName);
    }

    // Enter last name in the checkout form
    public void inputLastName(String lastName) {
        wait.until(ExpectedConditions.visibilityOf(inputLastName));
        inputLastName.sendKeys(lastName);
    }

    // Enter ZIP code in the checkout form
    public void inputZipCode(String zipCode) {
        wait.until(ExpectedConditions.visibilityOf(inputZipCod));
        inputZipCod.sendKeys(zipCode);
    }

    // Click the "Continue" button on checkout form
    public void continueClickButton() {
        wait.until(ExpectedConditions.elementToBeClickable(continueClickButton)).click();
    }

    // Click the "Finish" button to complete purchase
    public void buttonClickFinish() {
        wait.until(ExpectedConditions.elementToBeClickable(clickFinish)).click();
    }

    // Get the "Thank you for your order!" confirmation message text
    public String getThankYouMessage() {
        return wait.until(ExpectedConditions.visibilityOf(thankYouMessage)).getText();
    }

    // Get the secondary confirmation text below the thank you message
    public String getTextComplete() {
        return wait.until(ExpectedConditions.visibilityOf(completeTextMessage)).getText();
    }

    // Click the "Back Home" button to return to the main products page
    public void buttonClickBackHome() {
        wait.until(ExpectedConditions.elementToBeClickable(clickButtonBackHome)).click();
    }
}
